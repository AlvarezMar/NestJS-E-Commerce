import {
  Column,
  Entity,
  JoinColumn,
  ManyToMany,
  ManyToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { Categories } from './categories.entity';
import { OrderDetails } from './orderDetails.entity';

@Entity({
  name: 'PRODUCTS',
})
export class Products {
  /**
   * Autogenerated UUID.
   * @example '15707987-2981-4dd6-a99b-443caea1d6bd'
   */
  @PrimaryGeneratedColumn('uuid')
  id: string;

  /**
   * Name must be a unique and not null string and have a maximum of 50 characters.
   * @example 'Product name'
   */
  @Column({
    type: 'varchar',
    length: 50,
    nullable: false,
    unique: true,
  })
  name: string;

  /**
   * Description must be a not null string.
   * @example 'The best product'
   */
  @Column({
    type: 'text',
    nullable: false,
  })
  description: string;

  /**
   * Email must be a not null number with 2 decimals and have maximum 10 digits.
   * @example '150.00'
   */
  @Column({
    type: 'decimal',
    precision: 10,
    scale: 2,
    nullable: false,
  })
  price: number;

  /**
   * Stock must be a not null number.
   * @example '15'
   */
  @Column({
    type: 'integer',
    nullable: false,
  })
  stock: number;

  /**
   * ImgUrl must be a string.
   * @example 'https://image.jpg'
   */
  @Column({
    type: 'text',
  })
  imgUrl: string;

  @ManyToOne(() => Categories, (category) => category.products)
  @JoinColumn({ name: 'category_id' })
  category: Categories;

  @ManyToMany(() => OrderDetails, (orderDetails) => orderDetails.products)
  orderDetails: OrderDetails[];
}
